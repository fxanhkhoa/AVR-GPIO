
AVR GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000370  00000000  00000000  000002e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000133  00000000  00000000  00000650  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001e0  00000000  00000000  00000783  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000964  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d7  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000bc  00000000  00000000  00000b7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00000c3b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <main>
  64:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z5Mode1v>:
    }
}

void Mode1()
{
	PORTA = 0x00;
  6c:	1b ba       	out	0x1b, r1	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  6e:	2f ef       	ldi	r18, 0xFF	; 255
  70:	32 e5       	ldi	r19, 0x52	; 82
  72:	47 e0       	ldi	r20, 0x07	; 7
  74:	21 50       	subi	r18, 0x01	; 1
  76:	30 40       	sbci	r19, 0x00	; 0
  78:	40 40       	sbci	r20, 0x00	; 0
  7a:	e1 f7       	brne	.-8      	; 0x74 <_Z5Mode1v+0x8>
  7c:	00 c0       	rjmp	.+0      	; 0x7e <_Z5Mode1v+0x12>
  7e:	00 00       	nop
	_delay_ms(300);
	for (int i = 0;i < 8; i++)
  80:	80 e0       	ldi	r24, 0x00	; 0
  82:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTA |= (1 << i);
  84:	61 e0       	ldi	r22, 0x01	; 1
  86:	70 e0       	ldi	r23, 0x00	; 0
  88:	4b b3       	in	r20, 0x1b	; 27
  8a:	9b 01       	movw	r18, r22
  8c:	08 2e       	mov	r0, r24
  8e:	02 c0       	rjmp	.+4      	; 0x94 <_Z5Mode1v+0x28>
  90:	22 0f       	add	r18, r18
  92:	33 1f       	adc	r19, r19
  94:	0a 94       	dec	r0
  96:	e2 f7       	brpl	.-8      	; 0x90 <_Z5Mode1v+0x24>
  98:	24 2b       	or	r18, r20
  9a:	2b bb       	out	0x1b, r18	; 27
  9c:	2f ef       	ldi	r18, 0xFF	; 255
  9e:	32 e5       	ldi	r19, 0x52	; 82
  a0:	47 e0       	ldi	r20, 0x07	; 7
  a2:	21 50       	subi	r18, 0x01	; 1
  a4:	30 40       	sbci	r19, 0x00	; 0
  a6:	40 40       	sbci	r20, 0x00	; 0
  a8:	e1 f7       	brne	.-8      	; 0xa2 <_Z5Mode1v+0x36>
  aa:	00 c0       	rjmp	.+0      	; 0xac <_Z5Mode1v+0x40>
  ac:	00 00       	nop

void Mode1()
{
	PORTA = 0x00;
	_delay_ms(300);
	for (int i = 0;i < 8; i++)
  ae:	01 96       	adiw	r24, 0x01	; 1
  b0:	88 30       	cpi	r24, 0x08	; 8
  b2:	91 05       	cpc	r25, r1
  b4:	49 f7       	brne	.-46     	; 0x88 <_Z5Mode1v+0x1c>
	{
		PORTA |= (1 << i);
		_delay_ms(300);
	}
	PORTA = 0x00;
  b6:	1b ba       	out	0x1b, r1	; 27
  b8:	8f ef       	ldi	r24, 0xFF	; 255
  ba:	92 e5       	ldi	r25, 0x52	; 82
  bc:	27 e0       	ldi	r18, 0x07	; 7
  be:	81 50       	subi	r24, 0x01	; 1
  c0:	90 40       	sbci	r25, 0x00	; 0
  c2:	20 40       	sbci	r18, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <_Z5Mode1v+0x52>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <_Z5Mode1v+0x5c>
  c8:	00 00       	nop
	_delay_ms(300);
	for (int i = 7; i >= 0; i--)
  ca:	87 e0       	ldi	r24, 0x07	; 7
  cc:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTA |= (1 << i);
  ce:	61 e0       	ldi	r22, 0x01	; 1
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	4b b3       	in	r20, 0x1b	; 27
  d4:	9b 01       	movw	r18, r22
  d6:	08 2e       	mov	r0, r24
  d8:	02 c0       	rjmp	.+4      	; 0xde <_Z5Mode1v+0x72>
  da:	22 0f       	add	r18, r18
  dc:	33 1f       	adc	r19, r19
  de:	0a 94       	dec	r0
  e0:	e2 f7       	brpl	.-8      	; 0xda <_Z5Mode1v+0x6e>
  e2:	24 2b       	or	r18, r20
  e4:	2b bb       	out	0x1b, r18	; 27
  e6:	3f ef       	ldi	r19, 0xFF	; 255
  e8:	42 e5       	ldi	r20, 0x52	; 82
  ea:	27 e0       	ldi	r18, 0x07	; 7
  ec:	31 50       	subi	r19, 0x01	; 1
  ee:	40 40       	sbci	r20, 0x00	; 0
  f0:	20 40       	sbci	r18, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <_Z5Mode1v+0x80>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <_Z5Mode1v+0x8a>
  f6:	00 00       	nop
		PORTA |= (1 << i);
		_delay_ms(300);
	}
	PORTA = 0x00;
	_delay_ms(300);
	for (int i = 7; i >= 0; i--)
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	58 f7       	brcc	.-42     	; 0xd2 <_Z5Mode1v+0x66>
	{
		PORTA |= (1 << i);
		_delay_ms(300);
	}
}
  fc:	08 95       	ret

000000fe <_Z5Mode2v>:

void Mode2()
{
	PORTA = 0x00;
  fe:	1b ba       	out	0x1b, r1	; 27
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	32 e5       	ldi	r19, 0x52	; 82
 104:	47 e0       	ldi	r20, 0x07	; 7
 106:	21 50       	subi	r18, 0x01	; 1
 108:	30 40       	sbci	r19, 0x00	; 0
 10a:	40 40       	sbci	r20, 0x00	; 0
 10c:	e1 f7       	brne	.-8      	; 0x106 <_Z5Mode2v+0x8>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <_Z5Mode2v+0x12>
 110:	00 00       	nop
	_delay_ms(300);
	for (int i = 3; i >= 0 ; i--)
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTA |= (1 << i) | (1 << (7-i));
 116:	61 e0       	ldi	r22, 0x01	; 1
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	e7 e0       	ldi	r30, 0x07	; 7
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	4b b3       	in	r20, 0x1b	; 27
 120:	9b 01       	movw	r18, r22
 122:	08 2e       	mov	r0, r24
 124:	02 c0       	rjmp	.+4      	; 0x12a <_Z5Mode2v+0x2c>
 126:	22 0f       	add	r18, r18
 128:	33 1f       	adc	r19, r19
 12a:	0a 94       	dec	r0
 12c:	e2 f7       	brpl	.-8      	; 0x126 <_Z5Mode2v+0x28>
 12e:	42 2b       	or	r20, r18
 130:	9f 01       	movw	r18, r30
 132:	28 1b       	sub	r18, r24
 134:	39 0b       	sbc	r19, r25
 136:	db 01       	movw	r26, r22
 138:	02 c0       	rjmp	.+4      	; 0x13e <_Z5Mode2v+0x40>
 13a:	aa 0f       	add	r26, r26
 13c:	bb 1f       	adc	r27, r27
 13e:	2a 95       	dec	r18
 140:	e2 f7       	brpl	.-8      	; 0x13a <_Z5Mode2v+0x3c>
 142:	9d 01       	movw	r18, r26
 144:	24 2b       	or	r18, r20
 146:	2b bb       	out	0x1b, r18	; 27
 148:	bf ef       	ldi	r27, 0xFF	; 255
 14a:	22 e5       	ldi	r18, 0x52	; 82
 14c:	37 e0       	ldi	r19, 0x07	; 7
 14e:	b1 50       	subi	r27, 0x01	; 1
 150:	20 40       	sbci	r18, 0x00	; 0
 152:	30 40       	sbci	r19, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <_Z5Mode2v+0x50>
 156:	00 c0       	rjmp	.+0      	; 0x158 <_Z5Mode2v+0x5a>
 158:	00 00       	nop

void Mode2()
{
	PORTA = 0x00;
	_delay_ms(300);
	for (int i = 3; i >= 0 ; i--)
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	00 f7       	brcc	.-64     	; 0x11e <_Z5Mode2v+0x20>
	{
		PORTA |= (1 << i) | (1 << (7-i));
		_delay_ms(300);
	}
	PORTA = 0x00;
 15e:	1b ba       	out	0x1b, r1	; 27
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	92 e5       	ldi	r25, 0x52	; 82
 164:	a7 e0       	ldi	r26, 0x07	; 7
 166:	81 50       	subi	r24, 0x01	; 1
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	a0 40       	sbci	r26, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <_Z5Mode2v+0x68>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <_Z5Mode2v+0x72>
 170:	00 00       	nop
	_delay_ms(300);
	for (int i = 0; i < 4; i++)
 172:	80 e0       	ldi	r24, 0x00	; 0
 174:	90 e0       	ldi	r25, 0x00	; 0
	{
		PORTA |= (1 << i) | (1 << (7-i));
 176:	61 e0       	ldi	r22, 0x01	; 1
 178:	70 e0       	ldi	r23, 0x00	; 0
 17a:	e7 e0       	ldi	r30, 0x07	; 7
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	4b b3       	in	r20, 0x1b	; 27
 180:	9b 01       	movw	r18, r22
 182:	08 2e       	mov	r0, r24
 184:	02 c0       	rjmp	.+4      	; 0x18a <_Z5Mode2v+0x8c>
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <_Z5Mode2v+0x88>
 18e:	42 2b       	or	r20, r18
 190:	9f 01       	movw	r18, r30
 192:	28 1b       	sub	r18, r24
 194:	39 0b       	sbc	r19, r25
 196:	db 01       	movw	r26, r22
 198:	02 c0       	rjmp	.+4      	; 0x19e <_Z5Mode2v+0xa0>
 19a:	aa 0f       	add	r26, r26
 19c:	bb 1f       	adc	r27, r27
 19e:	2a 95       	dec	r18
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <_Z5Mode2v+0x9c>
 1a2:	9d 01       	movw	r18, r26
 1a4:	24 2b       	or	r18, r20
 1a6:	2b bb       	out	0x1b, r18	; 27
 1a8:	bf ef       	ldi	r27, 0xFF	; 255
 1aa:	22 e5       	ldi	r18, 0x52	; 82
 1ac:	37 e0       	ldi	r19, 0x07	; 7
 1ae:	b1 50       	subi	r27, 0x01	; 1
 1b0:	20 40       	sbci	r18, 0x00	; 0
 1b2:	30 40       	sbci	r19, 0x00	; 0
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <_Z5Mode2v+0xb0>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <_Z5Mode2v+0xba>
 1b8:	00 00       	nop
		PORTA |= (1 << i) | (1 << (7-i));
		_delay_ms(300);
	}
	PORTA = 0x00;
	_delay_ms(300);
	for (int i = 0; i < 4; i++)
 1ba:	01 96       	adiw	r24, 0x01	; 1
 1bc:	84 30       	cpi	r24, 0x04	; 4
 1be:	91 05       	cpc	r25, r1
 1c0:	f1 f6       	brne	.-68     	; 0x17e <_Z5Mode2v+0x80>
	{
		PORTA |= (1 << i) | (1 << (7-i));
		_delay_ms(300);
	}
}
 1c2:	08 95       	ret

000001c4 <main>:

int main(void)
{
	int mode = 1;
    /* Replace with your application code */
	DDRA = 0xFF; // Set Output for PORTA
 1c4:	8f ef       	ldi	r24, 0xFF	; 255
 1c6:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0x00; // Set Input for PORTB
 1c8:	17 ba       	out	0x17, r1	; 23
	DDRC = 0xFF; // Set Output for PORTC
 1ca:	84 bb       	out	0x14, r24	; 20

	PORTA = 0xFF; // Set 5v output for all pin
 1cc:	8b bb       	out	0x1b, r24	; 27
	PORTB = 0xFF; // Internal pull up high for all pin
 1ce:	88 bb       	out	0x18, r24	; 24
	PORTC = 0x00; // Set 0v output for all pin
 1d0:	15 ba       	out	0x15, r1	; 21
		//PORTA ^= 0xFF; // Reverse bit (0 -> 1 and 1 -> 0)
		//_delay_ms(500); // Delay 100ms (base on Clock set)
		// find out if pin 0 or pin 4 of PORTB got low input signal
		if (((PINB & (1 << 0)) == 0) || (((PINB & (1 << 4)) == 0)))
		{
			PORTC = 0xFF;
 1d2:	cf ef       	ldi	r28, 0xFF	; 255
    while (1) 
    {
		//PORTA ^= 0xFF; // Reverse bit (0 -> 1 and 1 -> 0)
		//_delay_ms(500); // Delay 100ms (base on Clock set)
		// find out if pin 0 or pin 4 of PORTB got low input signal
		if (((PINB & (1 << 0)) == 0) || (((PINB & (1 << 4)) == 0)))
 1d4:	b0 9b       	sbis	0x16, 0	; 22
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <main+0x18>
 1d8:	b4 99       	sbic	0x16, 4	; 22
 1da:	04 c0       	rjmp	.+8      	; 0x1e4 <main+0x20>
		{
			PORTC = 0xFF;
 1dc:	c5 bb       	out	0x15, r28	; 21
			PORTC = 0x00;
			mode = 1;
		}
		
		if (mode == 1) Mode1();
		else if (mode == 2) Mode2();
 1de:	0e 94 7f 00 	call	0xfe	; 0xfe <_Z5Mode2v>
 1e2:	f8 cf       	rjmp	.-16     	; 0x1d4 <main+0x10>
			mode = 2;
			//if (mode == 3) mode = 1;
		}
		else 
		{
			PORTC = 0x00;
 1e4:	15 ba       	out	0x15, r1	; 21
			mode = 1;
		}
		
		if (mode == 1) Mode1();
 1e6:	0e 94 36 00 	call	0x6c	; 0x6c <_Z5Mode1v>
 1ea:	f4 cf       	rjmp	.-24     	; 0x1d4 <main+0x10>

000001ec <_exit>:
 1ec:	f8 94       	cli

000001ee <__stop_program>:
 1ee:	ff cf       	rjmp	.-2      	; 0x1ee <__stop_program>
